The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

Import function from module:

    >>> add_integer = __import__('0-add_integer').add_integer

Test one int argument:

    >>> add_integer(1)
    99

Test one int argument and check default second:

    >>> add_integer(0)
    98

Test one float:

    >>> add_integer(124.9)
    222

Test two integers:

    >>> add_integer(10, 6)
    16

Test positive, negative integers:

    >>> add_integer(13947692, -57234)
    13890458

Test an integer and a float:

    >>> add_integer(123, 7.987)
    130

Add infinity:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Add nan:

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

Test first arg invalid:

    >>> add_integer("school", 0)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Test second arg invalid:

    >>> add_integer(123123, [])
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
